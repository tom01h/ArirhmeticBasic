Verilatorで検証することを前提に、テストベンチはC++で記述しています。32bitの符号あり、符号なしの乗算に対応しています。テストベンチは符号ありにしか対応していませんが…
Verilatorが使える環境前提ですが、
mul/ の下で make を実行すると sim/Vmul_2 が出来ます。
sim/Vmul_2 を引数なしで実行すると、ランダムで生成した入力を使った乗算を 1000 回実行します。
好きな回数で実行する場合は、引数を1個与えます。
好きな値をかけるには、引数を2個与えます。
引数は10進数ですが、結果の表示は16進数なので、バグの再現実行が面倒くさいです。

符号拡張を省略する工夫なしのバージョン (mul_0) を試す場合はコミットをさかのぼってください
ループで部分積を足しこむ前のバージョン (mul_1) を試す場合はコミットをさかのぼってください
  分かりやすさ最優先の記述です
３入力加算器を使って足しこむバージョン (mul_2) が最新です
  1サイクル毎に2個づつ部分積を減らしていくので、8サイクルで32bitの乗算が完了します
  パイプライン動作の検証はできません
